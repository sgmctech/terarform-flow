name: 'Terraform Deployment with Plan Review and Approval'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      region:
        description: 'AWS Region to deploy'
        required: true
        type: choice
        options:
          - us-east-1
          - us-east-2

jobs:
  terraform:
    name: 'Terraform Plan and Approval Workflow'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: |
          echo "Initializing Terraform for environment: ${{ github.event.inputs.environment }} in region: ${{ github.event.inputs.region }}"
          terraform init -backend-config="bucket=terraform-state-${{ github.event.inputs.environment }}" \
                         -backend-config="key=${{ github.event.inputs.environment }}/terraform.tfstate" \
                         -backend-config="region=${{ github.event.inputs.region }}"
        env:
          TF_LOG: ERROR

      - name: Generate Terraform Plan
        id: plan
        run: |
          echo "Generating Terraform plan for environment: ${{ github.event.inputs.environment }} in region: ${{ github.event.inputs.region }}"
          terraform plan -var="environment=${{ github.event.inputs.environment }}" \
                         -var="region=${{ github.event.inputs.region }}" \
                         -var-file=environments/${{ github.event.inputs.environment }}/variables.tfvars \
                         -out=tfplan
        env:
          TF_LOG: ERROR

      - name: Display Terraform Plan
        run: |
          echo "Here is the Terraform plan for review:"
          terraform show -no-color tfplan

      - name: Wait for Manual Approval
        uses: hmarr/auto-approve-action@v2 # External GitHub action to pause for manual approval
        with:
          prompt: "Do you approve this Terraform plan for ${GITHUB_EVENT.inputs.environment} in region ${GITHUB_EVENT.inputs.region}?"
        if: success()

      - name: Apply Terraform Changes
        if: ${{ success() }}
        run: |
          echo "Applying Terraform changes to environment: ${{ github.event.inputs.environment }} in region: ${{ github.event.inputs.region }}"
          terraform apply -auto-approve tfplan
        env:
          TF_LOG: ERROR

      - name: Completion Message
        if: ${{ success() }}
        run: |
          echo "Terraform deployment completed successfully for environment: ${{ github.event.inputs.environment }} in region: ${{ github.event.inputs.region }} ðŸŽ‰"
